name: build

on:
  workflow_dispatch:
    inputs:
      github_release:
        description: 'Create Github Release'
        default: true
        type: boolean
      docker_release:
        description: 'Push Docker images'
        default: true
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test server
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          java-package: 'jdk'
          distribution: 'temurin'

      - name: Set up QEMU (for emulating ARM)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: npm install
        working-directory: komga-webui
        run: npm install
      - name: npm build
        working-directory: komga-webui
        run: |
          npm run build
          mkdir ../komga/src/main/resources/public
          cp -r dist/* ../komga/src/main/resources/public/
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: ./gradlew :komga:prepareThymeLeaf :komga:bootJar :komga-tray:jar
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: ls
        run: |
          version=$(grep '^version=' gradle.properties | cut -d'=' -f2)
          echo "version=v$version" >> $GITHUB_ENV
          ls komga/build
          cp -r komga/build/*

      - name: JReleaser Release
        if: inputs.github_release
        run: ./gradlew jreleaserRelease
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: JReleaser Publish
        if: inputs.docker_release
        run: ./gradlew jreleaserPublish
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: DockerHub Description
        uses: peter-evans/dockerhub-description@v4.0.0
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERHUB_REPOSITORY: dyphire/komga-cn
          README_FILEPATH: ./README.md
